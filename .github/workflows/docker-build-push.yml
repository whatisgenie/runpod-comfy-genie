name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: genieremote
  IMAGE_NAME: comfyui-custom

jobs:
  build-and-push:
    runs-on: ubuntu-latest-4-cores  # 4-core, 16GB RAM, 14GB SSD (paid)
    # Alternative options (all paid):
    # runs-on: ubuntu-latest-8-cores   # 8-core, 32GB RAM, 14GB SSD  
    # runs-on: ubuntu-latest-16-cores  # 16-core, 64GB RAM, 14GB SSD
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Free up disk space
      run: |
        echo "Disk usage before cleanup:"
        df -h
        
        # Remove unnecessary packages and files
        sudo apt-get remove -y '^aspnetcore-.*' '^dotnet-.*' '^llvm-.*' 'php.*' '^mysql-.*' '^postgresql-.*'
        sudo apt-get autoremove -y
        sudo apt-get clean
        
        # Remove large directories
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        
        echo "Disk usage after cleanup:"
        df -h
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        provenance: false
        sbom: false
        
    - name: Image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.build-and-push.outputs.digest }}
